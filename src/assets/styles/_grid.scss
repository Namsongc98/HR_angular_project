@use "sass:math";
$grid-columns: 12;
$grid-gap: (
  "0": 0,
  "02": 2px,
  "04": 4px,
  "08": 8px,
  "10": 10px,
  "12": 12px,
  "15": 15px,
  "16": 16px,
  "20": 20px,
  "24": 24px,
  "30": 30px,
  "60": 60px,
  "85": 85px,
);

$layout-values: flex-start, flex-end, center, space-between, space-around;
$layout-aligns: stretch, center, flex-start, flex-end, baseline;

$flex-direction: column, column-reverse, row, row-reverse;

// grid gaps
@each $key, $val in $grid-gap {
  .gap-#{$key} > * {
    padding-left: $val;
  }
  .gap-#{$key} {
    margin-left: -$val;
    width: calc(100% + #{$val});
  }
  .gap-bottom-#{$key} > * {
    padding-bottom: $val;
  }
  .gap-bottom-#{$key} {
    margin-bottom: -$val;
    height: calc(100% + #{$val});
  }
  .gap-flex-#{$key} {
    gap: $val;
  }
}

// justify
@each $val in $layout-values {
  .justify-#{$val} {
    justify-content: $val;
  }
}
// aligns
@each $val in $layout-aligns {
  .align-#{$val} {
    align-items: $val;
  }
}
// flex
@each $val in $flex-direction {
  .flex-#{$val} {
    flex-direction: $val;
  }
}

@include xs {
  @for $i from 1 through $grid-columns {
    .col-xs-#{$i} {
      box-sizing: border-box;
      flex: 0, 0, calc(#{$i * 100%} / #{$grid-columns});
      width: calc(#{$i * 100%} / #{$grid-columns});
    }
  }
}

@include sm {
  @for $i from 1 through $grid-columns {
    .col-sm-#{$i} {
      box-sizing: border-box;
      flex: 0, 0, calc(#{$i * 100%} / #{$grid-columns});
      width: calc(#{$i * 100%} / #{$grid-columns});
    }
  }
}
@include md {
  @for $i from 1 through $grid-columns {
    .col-md-#{$i} {
      box-sizing: border-box;
      flex: 0, 0, calc(#{$i * 100%} / #{$grid-columns});
      width: calc(#{$i * 100%} / #{$grid-columns});
    }
  }
}
@include lg {
  @for $i from 1 through $grid-columns {
    .col-lg-#{$i} {
      box-sizing: border-box;
      flex: 0, 0, calc(#{$i * 100%} / #{$grid-columns});
      width: calc(#{$i * 100%} / #{$grid-columns});
    }
  }
}
@include xl {
  @for $i from 1 through $grid-columns {
    .col-xl-#{$i} {
      box-sizing: border-box;
      flex: 0, 0, calc(#{$i * 100%} / #{$grid-columns});
      width: calc(#{$i * 100%} / #{$grid-columns});
    }
  }
}

.container {
  margin: 0 auto;
  box-sizing: border-box;
}

.row {
  display: flex;
  flex-flow: row wrap;
}
